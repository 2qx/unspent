{"version":3,"file":"_page.svelte-d46c823c.js","sources":["../../../../../../../../../../node_modules/@cashscript/utils/dist/module/hash.js","../../../../../../../../../../node_modules/cashscript/dist/module/interfaces.js","../../../../../../../../../../node_modules/cashscript/dist/module/utils.js","../../../../../../../../../../node_modules/cashscript/dist/module/network/ElectrumNetworkProvider.js","../../../../../../../../../../node_modules/@smui/image-list/dist/ImageList.svelte","../../../../../../../../../../node_modules/@smui/image-list/dist/Item.js","../../../../../../../../../../node_modules/@smui/image-list/dist/ImageAspectContainer.js","../../../../../../../../../../node_modules/@smui/image-list/dist/Image.js","../../../../../../../../../../node_modules/@smui/image-list/dist/Supporting.js","../../../../../../../../src/lib/Donations.svelte","../../../../../../../../src/routes/202212_fundraiser/+page.svelte"],"sourcesContent":["import hash from 'hash.js';\nexport function sha512(payload) {\n    return Uint8Array.from(hash.sha512().update(payload).digest());\n}\nexport function sha256(payload) {\n    return Uint8Array.from(hash.sha256().update(payload).digest());\n}\nexport function ripemd160(payload) {\n    return Uint8Array.from(hash.ripemd160().update(payload).digest());\n}\nexport function hash160(payload) {\n    return ripemd160(sha256(payload));\n}\nexport function hash256(payload) {\n    return sha256(sha256(payload));\n}\n//# sourceMappingURL=hash.js.map","export function isSignableUtxo(utxo) {\n    return 'template' in utxo;\n}\nexport var SignatureAlgorithm;\n(function (SignatureAlgorithm) {\n    SignatureAlgorithm[SignatureAlgorithm[\"ECDSA\"] = 0] = \"ECDSA\";\n    SignatureAlgorithm[SignatureAlgorithm[\"SCHNORR\"] = 1] = \"SCHNORR\";\n})(SignatureAlgorithm || (SignatureAlgorithm = {}));\nexport var HashType;\n(function (HashType) {\n    HashType[HashType[\"SIGHASH_ALL\"] = 1] = \"SIGHASH_ALL\";\n    HashType[HashType[\"SIGHASH_NONE\"] = 2] = \"SIGHASH_NONE\";\n    HashType[HashType[\"SIGHASH_SINGLE\"] = 3] = \"SIGHASH_SINGLE\";\n    HashType[HashType[\"SIGHASH_ANYONECANPAY\"] = 128] = \"SIGHASH_ANYONECANPAY\";\n})(HashType || (HashType = {}));\n// Weird setup to allow both Enum parameters, as well as literal strings\n// https://stackoverflow.com/questions/51433319/typescript-constructor-accept-string-for-enum\nconst literal = (l) => l;\nexport const Network = {\n    MAINNET: literal('mainnet'),\n    TESTNET: literal('testnet'),\n    STAGING: literal('staging'),\n    REGTEST: literal('regtest'),\n};\n//# sourceMappingURL=interfaces.js.map","import { cashAddressToLockingBytecode, AddressType, addressContentsToLockingBytecode, lockingBytecodeToCashAddress, binToHex, createTransactionContextCommon, bigIntToBinUint64LE, generateSigningSerializationBCH, utf8ToBin, hexToBin, flattenBinArray, } from '@bitauth/libauth';\nimport { encodeInt, hash160, Op, scriptToBytecode, sha256, } from '@cashscript/utils';\nimport { Network, } from './interfaces.js';\nimport { P2PKH_OUTPUT_SIZE, VERSION_SIZE, LOCKTIME_SIZE, DUST_LIMIT, } from './constants.js';\nimport { OutputSatoshisTooSmallError, Reason, FailedTransactionError, FailedRequireError, FailedTimeCheckError, FailedSigCheckError, } from './Errors.js';\n// ////////// PARAMETER VALIDATION ////////////////////////////////////////////\nexport function validateRecipient(recipient) {\n    if (recipient.amount < DUST_LIMIT) {\n        throw new OutputSatoshisTooSmallError(recipient.amount);\n    }\n}\n// ////////// SIZE CALCULATIONS ///////////////////////////////////////////////\nexport function getInputSize(inputScript) {\n    const scriptSize = inputScript.byteLength;\n    const varIntSize = scriptSize > 252 ? 3 : 1;\n    return 32 + 4 + varIntSize + scriptSize + 4;\n}\nexport function getPreimageSize(script) {\n    const scriptSize = script.byteLength;\n    const varIntSize = scriptSize > 252 ? 3 : 1;\n    return 4 + 32 + 32 + 36 + varIntSize + scriptSize + 8 + 4 + 32 + 4 + 4;\n}\nexport function getTxSizeWithoutInputs(outputs) {\n    // Transaction format:\n    // Version (4 Bytes)\n    // TxIn Count (1 ~ 9B)\n    // For each TxIn:\n    //   Outpoint (36B)\n    //   Script Length (1 ~ 9B)\n    //   ScriptSig(?)\n    //   Sequence (4B)\n    // TxOut Count (1 ~ 9B)\n    // For each TxOut:\n    //   Value (8B)\n    //   Script Length(1 ~ 9B)*\n    //   Script (?)*\n    // LockTime (4B)\n    let size = VERSION_SIZE + LOCKTIME_SIZE;\n    size += outputs.reduce((acc, output) => {\n        if (typeof output.to === 'string') {\n            return acc + P2PKH_OUTPUT_SIZE;\n        }\n        // Size of an OP_RETURN output = byteLength + 8 (amount) + 2 (scriptSize)\n        return acc + output.to.byteLength + 8 + 2;\n    }, 0);\n    // Add tx-out count (accounting for a potential change output)\n    size += encodeInt(outputs.length + 1).byteLength;\n    return size;\n}\n// ////////// BUILD OBJECTS ///////////////////////////////////////////////////\nexport function createInputScript(redeemScript, encodedArgs, selector, preimage) {\n    // Create unlock script / redeemScriptSig (add potential preimage and selector)\n    const unlockScript = encodedArgs.reverse();\n    if (preimage !== undefined)\n        unlockScript.push(preimage);\n    if (selector !== undefined)\n        unlockScript.push(encodeInt(selector));\n    // Create input script and compile it to bytecode\n    const inputScript = [...unlockScript, scriptToBytecode(redeemScript)];\n    return scriptToBytecode(inputScript);\n}\nexport function createOpReturnOutput(opReturnData) {\n    const script = [\n        Op.OP_RETURN,\n        ...opReturnData.map((output) => toBin(output)),\n    ];\n    return { to: encodeNullDataScript(script), amount: 0 };\n}\nfunction toBin(output) {\n    const data = output.replace(/^0x/, '');\n    const encode = data === output ? utf8ToBin : hexToBin;\n    return encode(data);\n}\nexport function createSighashPreimage(transaction, input, inputIndex, coveredBytecode, hashtype) {\n    const state = createTransactionContextCommon({\n        inputIndex,\n        sourceOutput: { satoshis: bigIntToBinUint64LE(BigInt(input.satoshis)) },\n        spendingTransaction: transaction,\n    });\n    const sighashPreimage = generateSigningSerializationBCH({\n        correspondingOutput: state.correspondingOutput,\n        coveredBytecode,\n        forkId: new Uint8Array([0, 0, 0]),\n        locktime: state.locktime,\n        outpointIndex: state.outpointIndex,\n        outpointTransactionHash: state.outpointTransactionHash,\n        outputValue: state.outputValue,\n        sequenceNumber: state.sequenceNumber,\n        sha256: { hash: sha256 },\n        signingSerializationType: new Uint8Array([hashtype]),\n        transactionOutpoints: state.transactionOutpoints,\n        transactionOutputs: state.transactionOutputs,\n        transactionSequenceNumbers: state.transactionSequenceNumbers,\n        version: 2,\n    });\n    return sighashPreimage;\n}\nexport function buildError(reason, meepStr) {\n    const require = [\n        Reason.EVAL_FALSE, Reason.VERIFY, Reason.EQUALVERIFY, Reason.CHECKMULTISIGVERIFY,\n        Reason.CHECKSIGVERIFY, Reason.CHECKDATASIGVERIFY, Reason.NUMEQUALVERIFY,\n    ];\n    const timeCheck = [Reason.NEGATIVE_LOCKTIME, Reason.UNSATISFIED_LOCKTIME];\n    const sigCheck = [\n        Reason.SIG_COUNT, Reason.PUBKEY_COUNT, Reason.SIG_HASHTYPE, Reason.SIG_DER,\n        Reason.SIG_HIGH_S, Reason.SIG_NULLFAIL, Reason.SIG_BADLENGTH, Reason.SIG_NONSCHNORR,\n    ];\n    if (toRegExp(require).test(reason)) {\n        return new FailedRequireError(reason, meepStr);\n    }\n    if (toRegExp(timeCheck).test(reason)) {\n        return new FailedTimeCheckError(reason, meepStr);\n    }\n    if (toRegExp(sigCheck).test(reason)) {\n        return new FailedSigCheckError(reason, meepStr);\n    }\n    return new FailedTransactionError(reason, meepStr);\n}\nfunction toRegExp(reasons) {\n    return new RegExp(reasons.join('|').replace(/\\(/g, '\\\\(').replace(/\\)/g, '\\\\)'));\n}\n// ////////// MISC ////////////////////////////////////////////////////////////\nexport function meep(tx, utxos, script) {\n    const scriptPubkey = binToHex(scriptToLockingBytecode(script));\n    return `meep debug --tx=${tx} --idx=0 --amt=${utxos[0].satoshis} --pkscript=${scriptPubkey}`;\n}\nexport function scriptToAddress(script, network) {\n    const lockingBytecode = scriptToLockingBytecode(script);\n    const prefix = getNetworkPrefix(network);\n    const address = lockingBytecodeToCashAddress(lockingBytecode, prefix);\n    return address;\n}\nexport function scriptToLockingBytecode(script) {\n    const scriptHash = hash160(scriptToBytecode(script));\n    const addressContents = { payload: scriptHash, type: AddressType.p2sh };\n    const lockingBytecode = addressContentsToLockingBytecode(addressContents);\n    return lockingBytecode;\n}\n/**\n* Helper function to convert an address to a locking script\n*\n* @param address   Address to convert to locking script\n*\n* @returns a locking script corresponding to the passed address\n*/\nexport function addressToLockScript(address) {\n    const result = cashAddressToLockingBytecode(address);\n    if (typeof result === 'string')\n        throw new Error(result);\n    return result.bytecode;\n}\nexport function getNetworkPrefix(network) {\n    switch (network) {\n        case Network.MAINNET:\n            return 'bitcoincash';\n        case Network.STAGING:\n            return 'bchtest';\n        case Network.TESTNET:\n            return 'bchtest';\n        case Network.REGTEST:\n            return 'bchreg';\n        default:\n            return 'bitcoincash';\n    }\n}\n// ////////////////////////////////////////////////////////////////////////////\n// For encoding OP_RETURN data (doesn't require BIP62.3 / MINIMALDATA)\nfunction encodeNullDataScript(chunks) {\n    return flattenBinArray(chunks.map((chunk) => {\n        if (typeof chunk === 'number') {\n            return new Uint8Array([chunk]);\n        }\n        const pushdataOpcode = getPushDataOpcode(chunk);\n        return new Uint8Array([...pushdataOpcode, ...chunk]);\n    }));\n}\nfunction getPushDataOpcode(data) {\n    const { byteLength } = data;\n    if (byteLength === 0)\n        return Uint8Array.from([0x4c, 0x00]);\n    if (byteLength < 76)\n        return Uint8Array.from([byteLength]);\n    if (byteLength < 256)\n        return Uint8Array.from([0x4c, byteLength]);\n    throw Error('Pushdata too large');\n}\n//# sourceMappingURL=utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { binToHex } from '@bitauth/libauth';\nimport { sha256 } from '@cashscript/utils';\nimport { ElectrumCluster, ElectrumTransport, ClusterOrder, } from 'electrum-cash';\nimport { Network } from '../interfaces.js';\nimport { addressToLockScript } from '../utils.js';\nexport default class ElectrumNetworkProvider {\n    constructor(network = Network.MAINNET, electrum, manualConnectionManagement) {\n        this.network = network;\n        this.manualConnectionManagement = manualConnectionManagement;\n        this.concurrentRequests = 0;\n        // If a custom Electrum Cluster is passed, we use it instead of the default.\n        if (electrum) {\n            this.electrum = electrum;\n            return;\n        }\n        if (network === Network.MAINNET) {\n            // Initialise a 2-of-3 Electrum Cluster with 6 reliable hardcoded servers\n            // using the first three servers as \"priority\" servers\n            this.electrum = new ElectrumCluster('CashScript Application', '1.4.1', 2, 3, ClusterOrder.PRIORITY);\n            this.electrum.addServer('bch.imaginary.cash', 50004, ElectrumTransport.WSS.Scheme, false);\n            this.electrum.addServer('blackie.c3-soft.com', 50004, ElectrumTransport.WSS.Scheme, false);\n            this.electrum.addServer('electroncash.de', 60002, ElectrumTransport.WSS.Scheme, false);\n            this.electrum.addServer('electroncash.dk', 50004, ElectrumTransport.WSS.Scheme, false);\n            this.electrum.addServer('bch.loping.net', 50004, ElectrumTransport.WSS.Scheme, false);\n            this.electrum.addServer('electrum.imaginary.cash', 50004, ElectrumTransport.WSS.Scheme, false);\n        }\n        else if (network === Network.TESTNET) {\n            // Initialise a 1-of-2 Electrum Cluster with 2 hardcoded servers\n            this.electrum = new ElectrumCluster('CashScript Application', '1.4.1', 1, 2, ClusterOrder.PRIORITY);\n            this.electrum.addServer('blackie.c3-soft.com', 60004, ElectrumTransport.WSS.Scheme, false);\n            this.electrum.addServer('electroncash.de', 60004, ElectrumTransport.WSS.Scheme, false);\n            // this.electrum.addServer('bch.loping.net', 60004, ElectrumTransport.WSS.Scheme, false);\n            // this.electrum.addServer('testnet.imaginary.cash', 50004, ElectrumTransport.WSS.Scheme);\n        }\n        else if (network === Network.STAGING) {\n            this.electrum = new ElectrumCluster('CashScript Application', '1.4.1', 1, 1, ClusterOrder.PRIORITY);\n            this.electrum.addServer('testnet4.imaginary.cash', 50004, ElectrumTransport.WSS.Scheme, false);\n        }\n        else {\n            throw new Error(`Tried to instantiate an ElectrumNetworkProvider for unsupported network ${network}`);\n        }\n    }\n    getUtxos(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const scripthash = addressToElectrumScriptHash(address);\n            const result = yield this.performRequest('blockchain.scripthash.listunspent', scripthash);\n            const utxos = result.map((utxo) => ({\n                txid: utxo.tx_hash,\n                vout: utxo.tx_pos,\n                satoshis: utxo.value,\n                height: utxo.height,\n            }));\n            return utxos;\n        });\n    }\n    getBlockHeight() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { height } = yield this.performRequest('blockchain.headers.subscribe');\n            return height;\n        });\n    }\n    getRawTransaction(txid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.performRequest('blockchain.transaction.get', txid);\n        });\n    }\n    sendRawTransaction(txHex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.performRequest('blockchain.transaction.broadcast', txHex);\n        });\n    }\n    connectCluster() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield this.electrum.startup();\n            }\n            catch (e) {\n                return [];\n            }\n        });\n    }\n    disconnectCluster() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.electrum.shutdown();\n        });\n    }\n    performRequest(name, ...parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Only connect the cluster when no concurrent requests are running\n            if (this.shouldConnect()) {\n                this.connectCluster();\n            }\n            this.concurrentRequests += 1;\n            yield this.electrum.ready();\n            let result;\n            try {\n                result = yield this.electrum.request(name, ...parameters);\n            }\n            finally {\n                // Always disconnect the cluster, also if the request fails\n                // as long as no other concurrent requests are running\n                if (this.shouldDisconnect()) {\n                    yield this.disconnectCluster();\n                }\n            }\n            this.concurrentRequests -= 1;\n            if (result instanceof Error)\n                throw result;\n            return result;\n        });\n    }\n    shouldConnect() {\n        if (this.manualConnectionManagement)\n            return false;\n        if (this.concurrentRequests !== 0)\n            return false;\n        return true;\n    }\n    shouldDisconnect() {\n        if (this.manualConnectionManagement)\n            return false;\n        if (this.concurrentRequests !== 1)\n            return false;\n        return true;\n    }\n}\n/**\n * Helper function to convert an address to an electrum-cash compatible scripthash.\n * This is necessary to support electrum versions lower than 1.4.3, which do not\n * support addresses, only script hashes.\n *\n * @param address Address to convert to an electrum scripthash\n *\n * @returns The corresponding script hash in an electrum-cash compatible format\n */\nfunction addressToElectrumScriptHash(address) {\n    // Retrieve locking script\n    const lockScript = addressToLockScript(address);\n    // Hash locking script\n    const scriptHash = sha256(lockScript);\n    // Reverse scripthash\n    scriptHash.reverse();\n    // Return scripthash as a hex string\n    return binToHex(scriptHash);\n}\n//# sourceMappingURL=ElectrumNetworkProvider.js.map","<ul\n  bind:this={element}\n  use:useActions={use}\n  use:forwardEvents\n  class={classMap({\n    [className]: true,\n    'mdc-image-list': true,\n    'mdc-image-list--masonry': masonry,\n    'mdc-image-list--with-text-protection': withTextProtection,\n  })}\n  {...$$restProps}\n>\n  <slot />\n</ul>\n\n<script>import { setContext } from 'svelte';\nimport { get_current_component } from 'svelte/internal';\nimport { forwardEventsBuilder, classMap, useActions, } from '@smui/common/internal';\nconst forwardEvents = forwardEventsBuilder(get_current_component());\n// Remember to update $$Props if you add/remove/rename props.\nexport let use = [];\nlet className = '';\nexport { className as class };\nexport let masonry = false;\nexport let withTextProtection = false;\nlet element;\nsetContext('SMUI:label:context', 'image-list');\nexport function getElement() {\n    return element;\n}\n</script>\n","import { classAdderBuilder } from '@smui/common/classadder';\nexport default classAdderBuilder({\n    class: 'mdc-image-list__item',\n    tag: 'li',\n});\n//# sourceMappingURL=Item.js.map","import { classAdderBuilder } from '@smui/common/classadder';\nexport default classAdderBuilder({\n    class: 'mdc-image-list__image-aspect-container',\n    tag: 'div',\n});\n//# sourceMappingURL=ImageAspectContainer.js.map","import { classAdderBuilder } from '@smui/common/classadder';\nexport default classAdderBuilder({\n    class: 'mdc-image-list__image',\n    tag: 'img',\n});\n//# sourceMappingURL=Image.js.map","import { classAdderBuilder } from '@smui/common/classadder';\nexport default classAdderBuilder({\n    class: 'mdc-image-list__supporting',\n    tag: 'div',\n});\n//# sourceMappingURL=Supporting.js.map","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { base } from '$app/paths';\n\timport { load } from '$lib/machinery/loader-store.js';\n\timport { getUnspentOutputs } from '@unspent/phi';\n\timport Address from './Address.svelte';\n\timport ImageList, { Item, Image, Supporting, Label } from '@smui/image-list';\n\timport { chaingraphHost } from '$lib/store.js';\n\timport {\n\t\tinstantiateSha256,\n\t\thexToBin,\n\t\tlockingBytecodeToCashAddress,\n\t\tlockingBytecodeToBase58Address\n\t} from '@bitauth/libauth';\n\timport { browser } from '$app/environment';\n\timport { workerData } from 'worker_threads';\n\n\texport let lockingBytecode;\n\tlet results;\n\tlet cashaddr = '';\n\tlet bytecodeDetails;\n\tlet legacy = '';\n\tlet chaingraphHostValue = '';\n\n\tchaingraphHost.subscribe((value) => {\n\t\tchaingraphHostValue = value;\n\t});\n\n\tonMount(async () => {\n\t\tif (chaingraphHostValue.length > 0) {\n\t\t\tloadTx();\n\t\t}\n\t});\n\n\tfunction getUnevenImageSize(\n\t\tcounter: number,\n\t\tbase: number,\n\t\tvariance: number,\n\t\tpreAdd = (num: number) => num\n\t) {\n\t\tconst mid = (counter % 2 ? Math.cos : Math.sin)(counter) * variance;\n\t\treturn base + Math.floor(preAdd(mid));\n\t}\n\n\tconst loadTx = async () => {\n\t\tawait load({\n\t\t\tload: async () => {\n\t\t\t\tconst sha256Promise = instantiateSha256();\n\t\t\t\tresults = (await getUnspentOutputs(chaingraphHostValue, lockingBytecode)).search_output;\n\t\t\t\tresults = results.map((r) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttxid: r.transaction_hash.slice(2),\n\t\t\t\t\t\tvout: r.output_index,\n\t\t\t\t\t\tsatoshis: r.value_satoshis\n\t\t\t\t\t};\n\t\t\t\t}).reverse();\n\t\t\t\tlet cashaddrResponse = lockingBytecodeToCashAddress(\n\t\t\t\t\thexToBin(lockingBytecode),\n\t\t\t\t\t'bitcoincash'\n\t\t\t\t);\n\t\t\t\tif (typeof cashaddrResponse === 'string') cashaddr = cashaddrResponse;\n\t\t\t\tconst sha256 = await sha256Promise;\n\t\t\t\tlet legacyResponse = lockingBytecodeToBase58Address(\n\t\t\t\t\tsha256,\n\t\t\t\t\thexToBin(lockingBytecode),\n\t\t\t\t\t'mainnet'\n\t\t\t\t);\n\t\t\t\tif (typeof legacyResponse === 'string') legacy = legacyResponse;\n\t\t\t}\n\t\t});\n\t};\n</script>\n\n{#if cashaddr}\n\t<p>Cashaddress: <Address address={cashaddr} /></p>\n  <p>If you have a privacy-centric browser, you may copy the cash address manually:</p>\n\t<pre>{cashaddr}</pre>\n{/if}\n{#if legacy}\n\t<p>Legacy Address:</p>\n\t<pre>{legacy}</pre>\n{/if}\n\n{#if lockingBytecode}\n\t<h3>Donations so far...</h3>\n\t{#if results}\n\t\t<ImageList class=\"my-image-list-masonry\" style=\"min-height:1000px;\" masonry>\n\t\t\t{#each results as txo}\n\t\t\t\t<Item>\n\t\t\t\t\t<div class=\"tract\" style=\"height:{getUnevenImageSize(txo.satoshis, 80, 120, Math.abs)}px\">\n\t\t\t\t\t\t<h2>🍊 {txo.satoshis.toLocaleString()}</h2>\n\t\t\t\t\t\t<a target=_blank href=\"https://explorer.bitcoinunlimited.info/tx/{txo.txid}\" >Transaction</a>\n\t\t\t\t\t</div>\n\t\t\t\t</Item>\n\t\t\t{/each}\n\t\t</ImageList>\n\t{/if}\n{/if}\n\n<style>\n\t.tract {\n\t\talign-items: center;\n\t\tbackground: rgb(207, 237, 250);\n\t\tborder-radius: 30px;\n\t\tpadding: 10px;\n\t}\n\t.tract h2 {\n\t\tfont-weight: 600;\n\t\tcolor: rgb(148, 87, 1);\n    text-align: right;\n\t}\n  .tract a {\n\t\tfont-weight: 400;\n\t\tcolor: rgb(148, 87, 1);\n    \n\t}\n\n</style>\n","<script>\n\timport { beforeUpdate } from 'svelte';\n\timport { assets } from '$app/paths';\n\timport { load } from '$lib/machinery/loader-store.js';\n\timport LinearProgress from '@smui/linear-progress';\n\timport Card from '@smui/card';\n\timport { Confetti } from 'svelte-confetti';\n\timport { ElectrumNetworkProvider } from 'cashscript';\n\timport { deriveLockingBytecodeHex } from '@unspent/phi';\n\n\timport Donations from '$lib/Donations.svelte';\n\timport AddressQrCode from '$lib/AddressQrCode.svelte';\n\n\tconst cashaddr = 'bitcoincash:qz7xjt4xcpdu2gl75vrvkpwzfpjhy9hnm55gwzyvj4';\n\tlet lockingBytecode = deriveLockingBytecodeHex(cashaddr);\n\n\tlet goal = 6400000000;\n\tlet goalText = goal.toLocaleString();\n\tlet balance = 0;\n\tlet balanceText = '';\n\tlet percentDone = '';\n\tlet isSuccess = false;\n\n\tbeforeUpdate(async () => {\n\t\t// This fixes a bug related to the contract switch where old contracts appear\n\t\tif (!balance) await updateBalance();\n\t});\n\n\tconst updateBalance = async () => {\n\t\tawait load({\n\t\t\tload: async () => {\n\t\t\t\tif (cashaddr) balance = await getBalance(cashaddr);\n\t\t\t\tbalanceText = balance.toLocaleString();\n\t\t\t\tpercentDone = ((balance / goal) * 100).toFixed(4);\n\t\t\t\tisSuccess = balance > 6400000000 ? true : false;\n\t\t\t}\n\t\t});\n\t};\n\n\tconst getBalance = async (cashaddr) => {\n\t\tlet e = new ElectrumNetworkProvider();\n\t\tlet utxos = await e.getUtxos(cashaddr);\n\t\tlet balance = utxos\n\t\t\t.map((o) => {\n\t\t\t\treturn o.satoshis;\n\t\t\t})\n\t\t\t.reduce((a, b) => a + b, 0);\n\t\treturn balance;\n\t};\n</script>\n\n<svelte:head>\n\t{#if isSuccess}\n\t\t<title>💚 ₿∙ϕ 🎉 🥳</title>\n\t{:else}\n\t\t<title>💚 ₿∙ϕ ...</title>\n\t{/if}\n</svelte:head>\n\n{#if isSuccess}\n\t<div\n\t\tstyle=\"\nposition: fixed;\ntop: -50px;\nleft: 0;\nheight: 100vh;\nwidth: 100vw;\ndisplay: flex;\njustify-content: center;\noverflow: hidden;\npointer-events: none;\"\n\t>\n\t\t<Confetti\n\t\t\tx={[-5, 5]}\n\t\t\ty={[0, 0.1]}\n\t\t\tdelay={[500, 2000]}\n\t\t\tcolorArray={['#0F0', '#F0F']}\n\t\t\tduration=\"5000\"\n\t\t\tamount=\"400\"\n\t\t\tfallDistance=\"100vh\"\n\t\t/>\n\t</div>\n{/if}\n\n<section>\n\t<div class=\"card-display\">\n\t\t<div class=\"card-container\">\n\t\t\t<Card class=\"demo-spaced\">\n\t\t\t\t<div class=\"margins\">\n\t\t\t\t\t<h1>Welcome to the Unspent Phi Inaugural Fundraising Campaign.</h1>\n\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<img src=\"{assets}/dev/stereoscopic.png\" alt=\"Orange Grove\" />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<caption style=\"caption-side: bottom;\"\n\t\t\t\t\t\t\t>Howdy Do, Partner?! This here's a tangerine n' cowboy themed fundraiser. 🤠 🍊\n\t\t\t\t\t\t</caption>\n\t\t\t\t\t</table>\n\n\t\t\t\t\t{#if cashaddr}\n\t\t\t\t\t\t<AddressQrCode size={200} codeValue={cashaddr} />\n\t\t\t\t\t{/if}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis fundraiser is to support the further development of an open-source ecosystem around\n\t\t\t\t\t\tanyone-can-spend utxo contracts. A fraction of money donated will <i>also</i> be forwarded\n\t\t\t\t\t\tto support the software and tools this app depends on. At present, the app uses generic backend\n\t\t\t\t\t\tinfrastructure (fulcrum/chaingraph), but some of the budget will be set aside to run dedicated\n\t\t\t\t\t\tdeployments of those generic services.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe goal is to raise at least {goalText} satoshis (64 BCH) by the end of 2022. However, given\n\t\t\t\t\t\tthe nature of the markets Bitcoin Cash is traded on, +/- a \"0\" on the end would also be fine.\n\t\t\t\t\t\tThe fundraiser may also end at any time, if sufficient funds have been raised.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t{#if isSuccess}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\tWe've exceeded the initial goal, and now are up to {balanceText} satoshis! So about {percentDone}\n\t\t\t\t\t\t\t&#37; of the initial goal.\n\t\t\t\t\t\t</b>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<h3>Progress:</h3>\n\t\t\t\t\t\t<LinearProgress progress={balance / goal} />\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSo far, {balanceText} satoshis have been raised. About {percentDone} &#37; of the way there.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe donation address is a plain pay-to public key hash. If the goal is not met or is\n\t\t\t\t\t\texceeded, your support will still go towards the project. This is <b>not</b> a flipstarter,\n\t\t\t\t\t\t(Flipstarter is awesome 💚, it's just not the approach for this app).\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFunding is being sought <i>after</i> the initial app release for three reasons: 1) a lack\n\t\t\t\t\t\tof funding provided invaluable motivation to finish a minimal viable app; 2) it allowed the\n\t\t\t\t\t\tproject to be developed in \"stealth mode\", and, finally, 3) there was zero possibility the\n\t\t\t\t\t\tdeveloper (2qx) could just abscond with all the donations without ever building an app.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAll donations will be treated as pseudonymous in origin from the previous respective\n\t\t\t\t\t\tunspent outputs. A donation will <b>not</b> confer any stake, interest, privilege or authority\n\t\t\t\t\t\tover the direction of this software. Everything built is free to fork, but is not otherwise\n\t\t\t\t\t\towned or encumbered.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tBut, as a return on your investment, each donation <b>will receive</b> its own tract in the\n\t\t\t\t\t\ttable below, bulleted with tangerine emojis. All donations will be shown until the end campaign,\n\t\t\t\t\t\tat which point all the UTXOs and orange tracts will be rugged.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Donations {lockingBytecode} />\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</div>\n\t</div>\n</section>\n\n<style>\n\t* :global(.margins) {\n\t\tmargin: 18px 10px 24px;\n\t}\n\n\t* :global(.columns) {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\n\t* :global(.columns > *) {\n\t\tflex-basis: 0;\n\t\tmin-width: 245px;\n\t\tmargin-right: 12px;\n\t}\n\t* :global(.columns > *:last-child) {\n\t\tmargin-right: 0;\n\t}\n\n\t* :global(.columns .mdc-text-field),\n\t* :global(.columns .mdc-text-field + .mdc-text-field-helper-line) {\n\t\twidth: 218px;\n\t}\n\n\t* :global(.columns .status) {\n\t\twidth: auto;\n\t\tword-break: break-all;\n\t\toverflow-wrap: break-word;\n\t}\n</style>\n"],"names":["sha256","payload","hash","SignatureAlgorithm","HashType","literal","l","Network","addressToLockScript","address","result","cashAddressToLockingBytecode","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","ElectrumNetworkProvider","network","electrum","manualConnectionManagement","ElectrumCluster","ClusterOrder","ElectrumTransport","scripthash","addressToElectrumScriptHash","utxo","height","txid","txHex","name","parameters","lockScript","scriptHash","binToHex","classMap","ctx","insert_hydration","target","ul","anchor","forwardEvents","forwardEventsBuilder","get_current_component","use","$$props","className","masonry","withTextProtection","element","setContext","getElement","$$value","Item","classAdderBuilder","p0","p1","pre","p","create_if_block_1","h3","attr","a","a_href_value","getUnevenImageSize","div","append_hydration","h2","set_data","t1","t1_value","dirty","i","each_blocks","create_if_block_3","create_if_block_2","create_if_block","counter","base","variance","preAdd","num","mid","lockingBytecode","results","cashaddr","legacy","chaingraphHostValue","chaingraphHost","onMount","loadTx","load","sha256Promise","instantiateSha256","$$invalidate","getUnspentOutputs","r","cashaddrResponse","lockingBytecodeToCashAddress","hexToBin","legacyResponse","lockingBytecodeToBase58Address","goal","linearprogress_changes","b","assets","img","img_src_value","h1","table","tr","td","caption","i0","p2","b0","p3","i1","p4","b1","p5","b2","if_block0","section","div1","div0","deriveLockingBytecodeHex","goalText","balance","balanceText","percentDone","isSuccess","beforeUpdate","updateBalance","getBalance","o"],"mappings":"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"}