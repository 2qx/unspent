pragma cashscript >= 0.7.1;

// v20221205

// The buffer contract collects small inputs (i.e. dust) until a certain threshold value is reached.
// 
// It may be useful for collecting very small inputs, it SHOULD NOT be integrated
// into any payment flow requiring inputs much larger than the currenct block reward, 
// or for collecting payments over a period much longer than a few years.

contract Buffer(

  // threshold for output transactions
  int threshold,

  // LockingBytecode of the beneficiary, the address receiving payments
  bytes recipientLockingBytecode,

  // extra allowance for administration of contract
  // fees are paid from executors' allowance. 
  int executorAllowance
) {
  function execute() {

    // Check that the first output sends to the recipient
    require(tx.outputs[0].lockingBytecode == recipientLockingBytecode);
        
    // Get the total value on the contract
    int currentValue = tx.inputs[this.activeInputIndex].value;

    // Calculate value minus allowance
    int unlockedValue = currentValue - executorAllowance;

    // require the paid output exceeds the contract value threshold.
    require(unlockedValue >= threshold);

    // Check that the outputs send the correct amounts
    require(tx.outputs[0].value >= unlockedValue);
        
  }
}