{"version":3,"file":"AddressBlockie-49b6e60d.js","sources":["../../../../../../../../node_modules/ethereum-blockies-base64/dist/main.js","../../../../../../src/lib/AddressBlockie.svelte"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ethereum-blockies-base64\"] = factory();\n\telse\n\t\troot[\"ethereum-blockies-base64\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst pnglib = __webpack_require__(1);\n\tconst hsl2rgb = __webpack_require__(2);\n\n\t// The random number is a js implementation of the Xorshift PRNG\n\tconst randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t  for (let i = 0; i < randseed.length; i++) {\n\t    randseed[i] = 0;\n\t  }\n\t  for (let i = 0; i < seed.length; i++) {\n\t    randseed[i % 4] = (randseed[i % 4] << 5) - randseed[i % 4] + seed.charCodeAt(i);\n\t  }\n\t}\n\n\tfunction rand() {\n\t  // based on Java's String.hashCode(), expanded to 4 32bit values\n\t  const t = randseed[0] ^ (randseed[0] << 11);\n\n\t  randseed[0] = randseed[1];\n\t  randseed[1] = randseed[2];\n\t  randseed[2] = randseed[3];\n\t  randseed[3] = randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8);\n\n\t  return (randseed[3] >>> 0) / (1 << 31 >>> 0);\n\t}\n\n\tfunction createColor() {\n\t  //saturation is the whole color spectrum\n\t  const h = Math.floor(rand() * 360);\n\t  //saturation goes from 40 to 100, it avoids greyish colors\n\t  const s = rand() * 60 + 40;\n\t  //lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t  const l = (rand() + rand() + rand() + rand()) * 25 ;\n\n\t  return [h / 360, s / 100, l / 100];\n\t}\n\n\tfunction createImageData(size) {\n\t  const width = size; // Only support square icons for now\n\t  const height = size;\n\n\t  const dataWidth = Math.ceil(width / 2);\n\t  const mirrorWidth = width - dataWidth;\n\n\t  const data = [];\n\t  for (let y = 0; y < height; y++) {\n\t    let row = [];\n\t    for (let x = 0; x < dataWidth; x++) {\n\t      // this makes foreground and background color to have a 43% (1/2.3) probability\n\t      // spot color has 13% chance\n\t      row[x] = Math.floor(rand() * 2.3);\n\t    }\n\t    const r = row.slice(0, mirrorWidth).reverse();\n\t    row = row.concat(r);\n\n\t    for (let i = 0; i < row.length; i++) {\n\t      data.push(row[i]);\n\t    }\n\t  }\n\n\t  return data;\n\t}\n\n\t// Modifies the passed PNG to fill in a specified rectangle\n\tfunction fillRect(png, x, y, w, h, color) {\n\t  for(let i = 0; i < w; i++) {\n\t    for (let j = 0; j < h; j++) {\n\t      png.buffer[png.index(x + i, y + j)] = color;\n\t    }\n\t  }\n\t}\n\n\tfunction buildOpts(opts) {\n\t  if (!opts.seed) {\n\t    throw new Error('No seed provided');\n\t  }\n\n\t  seedrand(opts.seed);\n\n\t  return Object.assign({\n\t    size: 8,\n\t    scale: 16,\n\t    color: createColor(),\n\t    bgcolor: createColor(),\n\t    spotcolor: createColor(),\n\t  }, opts)\n\t}\n\n\tfunction makeBlockie(address) {\n\t  const opts = buildOpts({ seed: address.toLowerCase() });\n\n\t  const imageData = createImageData(opts.size);\n\t  const width = Math.sqrt(imageData.length);\n\n\t  const p = new pnglib(opts.size * opts.scale, opts.size * opts.scale, 3);\n\t  const bgcolor = p.color(...hsl2rgb(...opts.bgcolor));\n\t  const color = p.color(...hsl2rgb(...opts.color));\n\t  const spotcolor = p.color(...hsl2rgb(...opts.spotcolor));\n\n\t  for (let i = 0; i < imageData.length; i++) {\n\t    const row = Math.floor(i / width);\n\t    const col = i % width;\n\t    // if data is 0, leave the background\n\t    if (imageData[i]) {\n\t      // if data is 2, choose spot color, if 1 choose foreground\n\t      const pngColor = imageData[i] == 1 ? color : spotcolor;\n\t      fillRect(p, col * opts.scale, row * opts.scale, opts.scale, opts.scale, pngColor);\n\t    }\n\t  }\n\t  return `data:image/png;base64,${p.getBase64()}`;\n\t}\n\n\tmodule.exports = makeBlockie;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A handy class to calculate color values.\n\t *\n\t * @version 1.0\n\t * @author Robert Eisele <robert@xarg.org>\n\t * @copyright Copyright (c) 2010, Robert Eisele\n\t * @link http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/\n\t * @license http://www.opensource.org/licenses/bsd-license.php BSD License\n\t *\n\t */\n\n\t// Modified by George Chan <gchan@21cn.com>\n\n\t// Further modified by Will O'B <@wbobeirne> to make it\n\t// UglifyJS and \"use strict\"; friendly\n\n\tmodule.exports = function(width,height,depth) {\n\n\n\t    // helper functions for that ctx\n\t    function write(buffer, offs) {\n\t        for (var i = 2; i < arguments.length; i++) {\n\t            for (var j = 0; j < arguments[i].length; j++) {\n\t                buffer[offs++] = arguments[i].charAt(j);\n\t            }\n\t        }\n\t    }\n\n\t    function byte2(w) {\n\t        return String.fromCharCode((w >> 8) & 255, w & 255);\n\t    }\n\n\t    function byte4(w) {\n\t        return String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\n\t    }\n\n\t    function byte2lsb(w) {\n\t        return String.fromCharCode(w & 255, (w >> 8) & 255);\n\t    }\n\n\t    this.width   = width;\n\t    this.height  = height;\n\t    this.depth   = depth;\n\n\t    // pixel data and row filter identifier size\n\t    this.pix_size = height * (width + 1);\n\n\t    // deflate header, pix_size, block headers, adler32 checksum\n\t    this.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\n\n\t    // offsets and sizes of Png chunks\n\t    this.ihdr_offs = 0; // IHDR offset and size\n\t    this.ihdr_size = 4 + 4 + 13 + 4;\n\t    this.plte_offs = this.ihdr_offs + this.ihdr_size; // PLTE offset and size\n\t    this.plte_size = 4 + 4 + 3 * depth + 4;\n\t    this.trns_offs = this.plte_offs + this.plte_size; // tRNS offset and size\n\t    this.trns_size = 4 + 4 + depth + 4;\n\t    this.idat_offs = this.trns_offs + this.trns_size; // IDAT offset and size\n\t    this.idat_size = 4 + 4 + this.data_size + 4;\n\t    this.iend_offs = this.idat_offs + this.idat_size; // IEND offset and size\n\t    this.iend_size = 4 + 4 + 4;\n\t    this.buffer_size  = this.iend_offs + this.iend_size; // total PNG size\n\n\t    this.buffer  = new Array();\n\t    this.palette = new Object();\n\t    this.pindex  = 0;\n\n\t    var _crc32 = new Array();\n\n\t    // initialize buffer with zero bytes\n\t    for (var i = 0; i < this.buffer_size; i++) {\n\t        this.buffer[i] = \"\\x00\";\n\t    }\n\n\t    // initialize non-zero elements\n\t    write(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), 'IHDR', byte4(width), byte4(height), \"\\x08\\x03\");\n\t    write(this.buffer, this.plte_offs, byte4(this.plte_size - 12), 'PLTE');\n\t    write(this.buffer, this.trns_offs, byte4(this.trns_size - 12), 'tRNS');\n\t    write(this.buffer, this.idat_offs, byte4(this.idat_size - 12), 'IDAT');\n\t    write(this.buffer, this.iend_offs, byte4(this.iend_size - 12), 'IEND');\n\n\t    // initialize deflate header\n\t    var header = ((8 + (7 << 4)) << 8) | (3 << 6);\n\t    header+= 31 - (header % 31);\n\n\t    write(this.buffer, this.idat_offs + 8, byte2(header));\n\n\t    // initialize deflate block headers\n\t    for (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\n\t        var size, bits;\n\t        if (i + 0xffff < this.pix_size) {\n\t            size = 0xffff;\n\t            bits = \"\\x00\";\n\t        } else {\n\t            size = this.pix_size - (i << 16) - i;\n\t            bits = \"\\x01\";\n\t        }\n\t        write(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\n\t    }\n\n\t    /* Create crc32 lookup table */\n\t    for (var i = 0; i < 256; i++) {\n\t        var c = i;\n\t        for (var j = 0; j < 8; j++) {\n\t            if (c & 1) {\n\t                c = -306674912 ^ ((c >> 1) & 0x7fffffff);\n\t            } else {\n\t                c = (c >> 1) & 0x7fffffff;\n\t            }\n\t        }\n\t        _crc32[i] = c;\n\t    }\n\n\t    // compute the index into a png for a given pixel\n\t    this.index = function(x,y) {\n\t        var i = y * (this.width + 1) + x + 1;\n\t        var j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\n\t        return j;\n\t    }\n\n\t    // convert a color and build up the palette\n\t    this.color = function(red, green, blue, alpha) {\n\n\t        alpha = alpha >= 0 ? alpha : 255;\n\t        var color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\n\n\t        if (typeof this.palette[color] == \"undefined\") {\n\t            if (this.pindex == this.depth) return \"\\x00\";\n\n\t            var ndx = this.plte_offs + 8 + 3 * this.pindex;\n\n\t            this.buffer[ndx + 0] = String.fromCharCode(red);\n\t            this.buffer[ndx + 1] = String.fromCharCode(green);\n\t            this.buffer[ndx + 2] = String.fromCharCode(blue);\n\t            this.buffer[this.trns_offs+8+this.pindex] = String.fromCharCode(alpha);\n\n\t            this.palette[color] = String.fromCharCode(this.pindex++);\n\t        }\n\t        return this.palette[color];\n\t    }\n\n\t    // output a PNG string, Base64 encoded\n\t    this.getBase64 = function() {\n\n\t        var s = this.getDump();\n\n\t        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\t        var c1, c2, c3, e1, e2, e3, e4;\n\t        var l = s.length;\n\t        var i = 0;\n\t        var r = \"\";\n\n\t        do {\n\t            c1 = s.charCodeAt(i);\n\t            e1 = c1 >> 2;\n\t            c2 = s.charCodeAt(i+1);\n\t            e2 = ((c1 & 3) << 4) | (c2 >> 4);\n\t            c3 = s.charCodeAt(i+2);\n\t            if (l < i+2) { e3 = 64; } else { e3 = ((c2 & 0xf) << 2) | (c3 >> 6); }\n\t            if (l < i+3) { e4 = 64; } else { e4 = c3 & 0x3f; }\n\t            r+= ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\n\t        } while ((i+= 3) < l);\n\t        return r;\n\t    }\n\n\t    // output a PNG string\n\t    this.getDump = function() {\n\t        // compute adler32 of output pixels + row filter bytes\n\t        var BASE = 65521; /* largest prime smaller than 65536 */\n\t        var NMAX = 5552; /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\n\t        var s1 = 1;\n\t        var s2 = 0;\n\t        var n = NMAX;\n\n\t        for (var y = 0; y < this.height; y++) {\n\t            for (var x = -1; x < this.width; x++) {\n\t                s1+= this.buffer[this.index(x, y)].charCodeAt(0);\n\t                s2+= s1;\n\t                if ((n-= 1) == 0) {\n\t                    s1%= BASE;\n\t                    s2%= BASE;\n\t                    n = NMAX;\n\t                }\n\t            }\n\t        }\n\t        s1%= BASE;\n\t        s2%= BASE;\n\t        write(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\n\n\t        // compute crc32 of the PNG chunks\n\t        function crc32(png, offs, size) {\n\t            var crc = -1;\n\t            for (var i = 4; i < size-4; i += 1) {\n\t                crc = _crc32[(crc ^ png[offs+i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\n\t            }\n\t            write(png, offs+size-4, byte4(crc ^ -1));\n\t        }\n\n\t        crc32(this.buffer, this.ihdr_offs, this.ihdr_size);\n\t        crc32(this.buffer, this.plte_offs, this.plte_size);\n\t        crc32(this.buffer, this.trns_offs, this.trns_size);\n\t        crc32(this.buffer, this.idat_offs, this.idat_size);\n\t        crc32(this.buffer, this.iend_offs, this.iend_size);\n\n\t        // convert PNG to string\n\t        return \"\\x89PNG\\r\\n\\x1a\\n\" + this.buffer.join('');\n\t    }\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n\t/**\n\t * Converts an HSL color value to RGB. Conversion formula\n\t * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n\t * Assumes h, s, and l are contained in the set [0, 1] and\n\t * returns r, g, and b in the set [0, 255].\n\t *\n\t * @param   {number}  h       The hue\n\t * @param   {number}  s       The saturation\n\t * @param   {number}  l       The lightness\n\t * @return  {Array}           The RGB representation\n\t */\n\n\t function hue2rgb(p, q, t) {\n\t   if(t < 0) t += 1;\n\t   if(t > 1) t -= 1;\n\t   if(t < 1/6) return p + (q - p) * 6 * t;\n\t   if(t < 1/2) return q;\n\t   if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t   return p;\n\t }\n\n\tfunction hsl2rgb(h, s, l){\n\t  let r, g, b;\n\n\t  if (s == 0) {\n\t    r = g = b = l; // achromatic\n\t  } else {\n\t    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t    const p = 2 * l - q;\n\t    r = hue2rgb(p, q, h + 1/3);\n\t    g = hue2rgb(p, q, h);\n\t    b = hue2rgb(p, q, h - 1/3);\n\t  }\n\n\t  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), 255];\n\t}\n\n\tmodule.exports = hsl2rgb;\n\n\n/***/ }\n/******/ ])\n});\n;","<script>\n\n  import makeBlockie from 'ethereum-blockies-base64';\n\texport let lockingBytecode;\n  export let size\n\n\n\n</script>\n\n<div>\n  {#if lockingBytecode && size}\n  <img style=\"width:{size}px; height:{size}px;\" alt={lockingBytecode} src={makeBlockie(lockingBytecode)} />\n  {:else if lockingBytecode }\n  <img style=\"width:100px; height:100px;\" alt={lockingBytecode} src={makeBlockie(lockingBytecode)} />\n  {/if}\n</div>\n\n<style>\n\tdiv {\n    float: right;\n\t\tpadding: 10px;\n\t\tz-index: 1;\n\t}\n\n\n\n\tdiv :global(canvas) {\n\t\t/* fit QR to wrapper */\n\n\t\tleft: 0;\n\t\ttop: 0;\n\t}\n</style>\n"],"names":["root","factory","module","this","modules","installedModules","__webpack_require__","moduleId","exports","pnglib","hsl2rgb","randseed","seedrand","seed","i","rand","t","createColor","h","l","createImageData","size","width","height","dataWidth","mirrorWidth","data","y","row","x","r","fillRect","png","w","color","j","buildOpts","opts","makeBlockie","address","imageData","p","spotcolor","col","pngColor","depth","write","buffer","offs","byte2","byte4","byte2lsb","_crc32","header","bits","c","red","green","blue","alpha","ndx","s","ch","c1","c2","c3","e1","e2","e3","e4","BASE","NMAX","s1","s2","n","crc32","crc","hue2rgb","q","g","b","ctx","src_url_equal","img","img_src_value","attr","insert_hydration","target","anchor","dirty","create_if_block","create_if_block_1","div","lockingBytecode","$$props"],"mappings":"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"}